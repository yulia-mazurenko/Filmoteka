{"mappings":"oeAAAA,EAAA,S,4CCAA,IAAAC,EAAAD,EAAA,SA2DA,SAASE,IACLD,EAAAE,KAAKC,SAASC,UAAUC,OAAO,UAC/BL,EAAAE,KAAKI,WAAWF,UAAUG,IAAI,UAC9B,MAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtD,GAA6B,IAAzBJ,EAAcK,OAAc,CAE5B,MAAMC,EAAc,6BAEpB,YADAd,EAAAE,KAAKa,QAAQC,UAAYF,E,CAK/B,MAAMG,EAFiB,IAAI,IAAIC,IAAIV,EAAcW,KAAKC,GAAS,CAACA,EAAS,GAAGA,MAAQC,UAEnDF,KAAIG,IACnC,MAAMC,EAAcD,EAAME,OAG1B,GAAID,EAAYV,OAAS,EAAG,CACxB,MAAMY,EAAQ,QACdF,EAAY,GAAGG,KAAOD,EACtBF,EAAYV,OAAS,C,CAUrB,MAAO,YACNS,EAAMK,mHAEXL,EAAMM,oHAIFN,EAAMO,gEAbIC,EAgBCP,EAfjBO,EAAYC,QAAO,CAACC,EAAWC,KAC7BD,EAAUE,KAAKD,EAAMP,MAEdM,IACN,KAW2BG,KAAK,WAAWb,EAAMc,aAAaC,UAAU,EAAG,uCAhB9D,IAAAP,CAqBjB,IAEMK,KAAK,IACRnC,EAAAE,KAAKa,QAAQC,UAAYC,C,CAxG7BjB,EAAAE,KAAKI,WAAWgC,iBAAiB,QAASrC,GAC1CD,EAAAE,KAAKC,SAASmC,iBAAiB,SAM/B,WACItC,EAAAE,KAAKI,WAAWF,UAAUC,OAAO,UACjCL,EAAAE,KAAKC,SAASC,UAAUG,IAAI,UAC5B,MAAMgC,EAAe9B,KAAKC,MAAMC,aAAaC,QAAQ,gBACrD,GAA4B,IAAxB2B,EAAa1B,OAAc,CAE3B,MAAMC,EAAc,6BAEpB,YADAd,EAAAE,KAAKa,QAAQC,UAAYF,E,CAK/B,MAAMG,EAFiB,IAAI,IAAIC,IAAIqB,EAAapB,KAAKC,GAAS,CAACA,EAAS,GAAGA,MAAQC,UAElDF,KAAIG,IACnC,MAAMkB,EAAclB,EAAME,OAE1B,GAAIgB,EAAY3B,OAAS,EAAG,CACxB,MAAMY,EAAQ,QACde,EAAY,GAAGd,KAAOD,EACtBe,EAAY3B,OAAS,C,CAWrB,MAAO,YACNS,EAAMK,mHAEXL,EAAMM,oHAIFN,EAAMO,gEAfIC,EAkBCU,EAjBjBV,EAAYC,QAAO,CAACC,EAAWC,KAC7BD,EAAUE,KAAKD,EAAMP,MAEdM,IACN,KAa2BG,KAAK,WAAWb,EAAMc,aAAaC,UAAU,EAAG,uCAlB9D,IAAAP,CAuBjB,IAEMK,KAAK,IACRnC,EAAAE,KAAKa,QAAQC,UAAYC,C,IAnD7BwB,YAAW,KACPxC,GAAe,GACd","sources":["src/library.js","src/js/queued.js"],"sourcesContent":["import './js/refs';\nimport './js/team-modal';\nimport \"./js/modal\";\nimport './js/auth';\nimport './js/button-scroll-to-top';\nimport './js/queued';","import { refs } from \"./refs\";\n\nrefs.watchedBtn.addEventListener('click', renderWatched);\nrefs.queueBtn.addEventListener('click', renderQueued);\n\nsetTimeout(() => {\n    renderWatched();\n  }, 150);\n\nfunction renderQueued() {\n    refs.watchedBtn.classList.remove(\"active\");\n    refs.queueBtn.classList.add(\"active\");\n    const queuedMovies = JSON.parse(localStorage.getItem('queue-films'));\n    if (queuedMovies.length === 0) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(queuedMovies.map((item) => [item[\"id\"], item])).values()];\n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n\n    return allGenres;\n  }, []);\n \n   \n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\nfunction renderWatched() {\n    refs.queueBtn.classList.remove(\"active\");\n    refs.watchedBtn.classList.add(\"active\");\n    const watchedMovies = JSON.parse(localStorage.getItem('watched-films'))\n    if (watchedMovies.length === 0) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(watchedMovies.map((item) => [item[\"id\"], item])).values()];    \n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n    \n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n   \n    return allGenres;\n  }, []);\n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\n"],"names":["parcelRequire","$krGWQ","$b90371e4116d8894$var$renderWatched","refs","queueBtn","classList","remove","watchedBtn","add","watchedMovies","JSON","parse","localStorage","getItem","length","placeholder","gallery","innerHTML","newMarkup","Map","map","item","values","movie","totalGenres2","genres","other","name","id","poster_path","original_title","totalGenres","reduce","allGenres","genre","push","join","release_date","substring","addEventListener","queuedMovies","totalGenres1","setTimeout"],"version":3,"file":"library.672eaae4.js.map"}