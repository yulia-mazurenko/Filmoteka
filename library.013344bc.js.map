{"mappings":"iiBAAAA,EAAA,S,4CCAA,IAAAC,EAAAD,EAAA,S,aA2DA,SAASE,IACLC,EAAAC,KAAKC,SAASC,UAAUC,OAAO,UAC/BJ,EAAAC,KAAKI,WAAWF,UAAUG,IAAI,UAC9B,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACtD,GAA6B,IAAzBJ,EAAcK,OAAlB,CAMA,IAEIC,EAFkBC,EAAAhB,EAAA,CAAG,IAAIiB,IAAIR,EAAcS,KAAI,SAACC,G,MAAS,CAACA,EAAS,GAAGA,E,KAAQC,UAEnDF,KAAI,SAAAG,GACnC,IAAMC,EAAcD,EAAME,OAG1B,GAAID,EAAYR,OAAS,EAAG,CAExBQ,EAAY,GAAGE,KADD,QAEdF,EAAYR,OAAS,C,CAI7B,IAAkBW,EAMV,MAAO,YAGXC,OAFKL,EAAMM,GAAG,kHAMVD,OAJJL,EAAMO,YACP,0GAMMF,OAHDL,EAAMQ,eAAe,kDAGmBH,QAhB9BD,EAgBCH,EAfjBG,EAAYK,QAAO,SAACC,EAAWC,GAG7B,OAFAD,EAAUE,KAAKD,EAAMR,MAEdO,C,GACN,KAW2BG,KAAK,MAAM,OAAwCR,OAAnCL,EAAMc,aAAaC,UAAU,EAAG,GAAG,qC,IAO5EF,KAAK,IACRhC,EAAAC,KAAKkC,QAAQC,UAAYvB,C,KA3CzB,CAGIb,EAAAC,KAAKkC,QAAQC,UADQ,4B,EA/D7BpC,EAAAC,KAAKI,WAAWgC,iBAAiB,QAAStC,GAC1CC,EAAAC,KAAKC,SAASmC,iBAAiB,SAM/B,WACIrC,EAAAC,KAAKI,WAAWF,UAAUC,OAAO,UACjCJ,EAAAC,KAAKC,SAASC,UAAUG,IAAI,UAC5B,IAAMgC,EAAe9B,KAAKC,MAAMC,aAAaC,QAAQ,gBACrD,GAA4B,IAAxB2B,EAAa1B,OAAc,CAI3B,YADAZ,EAAAC,KAAKkC,QAAQC,UADQ,6B,CAIzB,IAEIvB,EAFkBC,EAAAhB,EAAA,CAAG,IAAIiB,IAAIuB,EAAatB,KAAI,SAACC,G,MAAS,CAACA,EAAS,GAAGA,E,KAAQC,UAElDF,KAAI,SAAAG,GACnC,IAAMoB,EAAcpB,EAAME,OAE1B,GAAIkB,EAAY3B,OAAS,EAAG,CAExB2B,EAAY,GAAGjB,KADD,QAEdiB,EAAY3B,OAAS,C,CAG7B,IAAkBW,EAQV,MAAO,YAGXC,OAFKL,EAAMM,GAAG,kHAMVD,OAJJL,EAAMO,YACP,0GAMMF,OAHDL,EAAMQ,eAAe,kDAGmBH,QAlB9BD,EAkBCgB,EAjBjBhB,EAAYK,QAAO,SAACC,EAAWC,GAG7B,OAFAD,EAAUE,KAAKD,EAAMR,MAEdO,C,GACN,KAa2BG,KAAK,MAAM,OAAwCR,OAAnCL,EAAMc,aAAaC,UAAU,EAAG,GAAG,qC,IAO5EF,KAAK,IACRhC,EAAAC,KAAKkC,QAAQC,UAAYvB,C,IAnD7B2B,YAAW,WACPzC,G,GACC,I","sources":["src/library.js","src/js/queued.js"],"sourcesContent":["import './js/refs';\nimport './js/team-modal';\nimport \"./js/modal\";\nimport './js/auth';\nimport './js/button-scroll-to-top';\nimport './js/queued';","import { refs } from \"./refs\";\n\nrefs.watchedBtn.addEventListener('click', renderWatched);\nrefs.queueBtn.addEventListener('click', renderQueued);\n\nsetTimeout(() => {\n    renderWatched();\n  }, 150);\n\nfunction renderQueued() {\n    refs.watchedBtn.classList.remove(\"active\");\n    refs.queueBtn.classList.add(\"active\");\n    const queuedMovies = JSON.parse(localStorage.getItem('queue-films'));\n    if (queuedMovies.length === 0) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(queuedMovies.map((item) => [item[\"id\"], item])).values()];\n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n\n    return allGenres;\n  }, []);\n \n   \n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\nfunction renderWatched() {\n    refs.queueBtn.classList.remove(\"active\");\n    refs.watchedBtn.classList.add(\"active\");\n    const watchedMovies = JSON.parse(localStorage.getItem('watched-films'))\n    if (watchedMovies.length === 0) {\n        \n        const placeholder = `<p>Your list is empty(</p>`\n        refs.gallery.innerHTML = placeholder;\n        return\n    }\n    let uniqueObjArray = [...new Map(watchedMovies.map((item) => [item[\"id\"], item])).values()];    \n    \n  const newMarkup = uniqueObjArray.map(movie => {\n    const totalGenres = movie.genres;\n    \n\n    if (totalGenres.length > 3) {\n        const other = 'Other';\n        totalGenres[2].name = other;\n        totalGenres.length = 3;\n    };\n    \n    \nconst getGenres = totalGenres =>\n  totalGenres.reduce((allGenres, genre) => {\n    allGenres.push(genre.name);\n   \n    return allGenres;\n  }, []);\n        return `\n <a id=${movie.id} class=\"gallery__poster-card\" href=\"\">\n  <img class=\"poster-card__image\" src=\"https://image.tmdb.org/t/p/w780${\n    movie.poster_path\n  }\" alt=\"\" loading=\"lazy\" />\n  <div class=\"poster-card__info\">\n    <p class=\"info-item title\">\n      ${movie.original_title}\n    </p>\n    <p class=\"info-item\">\n    // ${getGenres(totalGenres).join(', ')} | ${movie.release_date.substring(0, 4)}\n    </p>\n  \n  </div>\n  </a>\n`;\n      })\n      .join('');\n    refs.gallery.innerHTML = newMarkup;\n}\n\n"],"names":["parcelRequire","$8nrFW","$58acdbc916049461$var$renderWatched","$4Nugj","refs","queueBtn","classList","remove","watchedBtn","add","watchedMovies","JSON","parse","localStorage","getItem","length","newMarkup","$parcel$interopDefault","Map","map","item","values","movie","totalGenres2","genres","name","totalGenres","concat","id","poster_path","original_title","reduce","allGenres","genre","push","join","release_date","substring","gallery","innerHTML","addEventListener","queuedMovies","totalGenres1","setTimeout"],"version":3,"file":"library.013344bc.js.map"}